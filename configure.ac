# -*- Autoconf -*-
#
# Copyright (C) 2011-2014 ABINIT Group (Yann Pouillon)
#
# This file is part of the ABINIT software package. For license information,
# please see the COPYING file in the top-level directory of the ABINIT source
# distribution.
#

# ---------------------------------------------------------------------------- #

#
# IMPORTANT NOTE
#
# Please DO NOT EDIT this file unless you REALLY know what you are doing.
# Everything is important, in particular the order of the various commands
# executed here. YOU HAVE BEEN WARNED !
#

# ---------------------------------------------------------------------------- #

#
# Autoconf & Automake startup
#

# Initialize Autoconf
AC_PREREQ(2.68)
AC_INIT([ABINIT-Fallbacks],[8.0.0],
  [https://bugs.launchpad.net/abinit-fallbacks/],[abinit-fallbacks])
AC_REVISION([Autotools support for the ABINIT Fallbacks])
AC_CONFIG_AUX_DIR([config/gnu])
AC_CONFIG_SRCDIR([.])
_AC_SRCDIRS(["."])

# ---------------------------------------------------------------------------- #

#
# Startup
#

# Initial setup
AC_CANONICAL_TARGET
AM_INIT_AUTOMAKE(1.12)

# Check for common programs
AC_PROG_MAKE_SET
AC_PROG_INSTALL
AC_PROG_LN_S
AC_PROG_SED
AC_PROG_AWK
AC_PROG_GREP

# Workaround for the "grep -e" issue on Solaris systems
AC_PROG_EGREP

# Workaround for the wrong path to install-sh on Mac systems
AX_PROG_MKDIR_P

# Make sure the source tree is complete
${MKDIR_P} exports/include sources stamps

# ---------------------------------------------------------------------------- #

#
# Define global options
#

ABI_FALLBACKS_ENV_BACKUP
ABI_FALLBACKS_OPTIONS_DEFINE
ABI_FALLBACKS_OPTIONS_BACKUP
ABI_FALLBACKS_OPTIONS_SETUP
ABI_FALLBACKS_OPTIONS_CHANGED
ABI_FALLBACKS_OPTIONS_PARSE
ABI_FALLBACKS_ENV_INIT

if test "${with_tardir}" = ""; then
  abinit_tardir="${HOME}/.abinit/tarballs"
else
  abinit_tardir="${with_tardir}"
fi
AC_MSG_NOTICE([setting tarball repository to ${abinit_tardir}])
AC_SUBST(abinit_tardir)

AC_ARG_VAR([RANLIB],[Archive indexer])
AC_SUBST(RANLIB)

# ---------------------------------------------------------------------------- #

#
# Downloading support
#

# Look for wget and curl
if test "${WGET}" = ""; then
  AC_CHECK_PROGS([WGET],[wget])
fi
if test "${CURL}" = ""; then
  AC_CHECK_PROGS([CURL],[curl])
fi

# Warn if neither wget nor curl have been found
# Note: cannot stop, since tarballs may be downloaded by other means
if test "${WGET}" = "" -a "${CURL}" = ""; then
  AC_MSG_WARN([no downloader found
    Please set the WGET or CURL environment variable manually if
    you want to be able to download tarballs])
fi

# Select downloader and corresponding options
if test "${WGET}" != ""; then
  afb_downloader="${WGET}"
  afb_dlopts="--timeout=15 --tries=1 -q -O"
elif test "${CURL}" != ""; then
  afb_downloader="${CURL}"
  afb_dlopts="--connect-time 15 --retry 1 -s -S -o"
fi

# Make sure the tarball directory exists
if test ! -e "${abinit_tardir}"; then
  AC_MSG_NOTICE([creating tarball repository ${abinit_tardir}])
  ${INSTALL} -d -m 755 "${abinit_tardir}"
fi
AC_MSG_NOTICE([using tarball repository ${abinit_tardir}])
AC_SUBST(abinit_tardir)

# ---------------------------------------------------------------------------- #

#
# Source code management
#

# Init installation directory
test "${prefix}" = "" && fallbacks_instdir="${ac_abs_top_builddir}/exports"
AC_SUBST(fallbacks_instdir)

# Stop if patch is required and not available
ABI_FALLBACKS_PATCHES

# ---------------------------------------------------------------------------- #

#
# C support
#

AC_PROG_CC
AC_PROG_CPP

# LibXC sometimes requires C99
if test "${with_fc_vendor}" = "ibm"; then
  AC_PROG_CC_C99
else
  ac_cv_prog_cc_c99="no"
fi

# ---------------------------------------------------------------------------- #

#
# C++ support
#

AC_PROG_CXX

# ---------------------------------------------------------------------------- #

#
# Fortran support
#

AC_PROG_FC
ABI_FALLBACKS_PROG_FC

# ---------------------------------------------------------------------------- #

#
# Archiver support
#

AC_CHECK_PROGS([AR],[ar xiar])
AC_PROG_RANLIB

# ---------------------------------------------------------------------------- #

#
# Final configuration of fallbacks
#

ABI_FALLBACKS_SETUP

# ---------------------------------------------------------------------------- #

#
# Output configuration and report
#

AC_CONFIG_FILES([fallbacks.dump Makefile])
AC_OUTPUT

ABI_FALLBACKS_INFO
