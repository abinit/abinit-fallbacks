#!/bin/bash

# Check that we are in the right directory
if test ! -s "./configure.ac" -o ! -s "config/specs/fallbacks.conf"; then
  echo "[fbkexport]   This is not an Abinit Fallbacks source tree - aborting now" >&2
  exit 1
fi

# Accept one and only one existing Abinit source tree as argument
abinit_srcdir=`readlink -e "${1}"`
test "${#}" -gt 1 && exit 1
test -d "${abinit_srcdir}" || exit 1
test -d "${abinit_srcdir}/.git" || exit 1
test -s "${abinit_srcdir}/src/98_main/abinit.F90" || exit 1

# Checks whether a Git work tree is clean
check_work_tree () {
  # Update the index
  git update-index -q --ignore-submodules --refresh
  ret=1

  # Check for unstaged changes in the working tree
  git diff-files --quiet --ignore-submodules --
  wtdf="${?}"
  if test "${wtdf}" != "0"; then
    ret=0
  fi

  # Check for uncommitted changes in the index
  git diff-index --cached --quiet HEAD --ignore-submodules --
  wtdi="${?}"
  if test "${wtdi}" != "0"; then
    ret=0
  fi

  # Check for untracked files
  wtuf=`git ls-files --other --exclude-standard`
  if test -n "${wtuf}"; then
    ret=0
  fi

  echo "${ret}"
}

# Stop at first error
set -e

# Get fallbacks branch information
fbk_branch=`git branch | awk '{print $2}' | \
  sed -e 's/^[ ]*//; s/[ ]*$//' -e '/^$/d'`
fbk_clean=`check_work_tree`
fbk_revno=`git rev-parse HEAD | sed -e 's/\(.......\).*/\1/'`
fbk_srcdir="${PWD}"

# Create fallbacks source tarball
if test "${fbk_clean}" = "1"; then
  ./wipeout.sh
  ./autogen.sh
  mkdir tmp-export
  cd tmp-export
  ../configure
  make dist
  fbk_tarball=`ls "${PWD}"/abinit-fallbacks-*.tar.gz`
else
  echo "[fbkexport]   Error: Fallbacks source tree has uncommitted changes" >&2
  echo "[fbkexport]   Please commit them first and rerun this script" >&2
  exit 1
fi

# Ask for confirmation
echo ""
echo "******************************************************************************"
echo -n "Overwrite '${abinit_srcdir}/fallbacks' (y/N)? "
read yesno
echo "******************************************************************************"

# Replace old fallbacks tarball
if test "${yesno}" = "Y" -o "${yesno}" = "y"; then
  cd "${abinit_srcdir}"
  abi_clean=`check_work_tree`
  if test "${abi_clean}" = "1"; then
    rm -f fallbacks/abinit-fallbacks-[0-9].[0-9].[0-9].tar.gz
    cp "${fbk_tarball}" fallbacks
  else
    echo "[fbkexport]   Error: Abinit source tree has uncommitted changes" >&2
    echo "[fbkexport]   Please commit them first and rerun this script" >&2
    exit 1
  fi
else
  exit 0
fi

# Commit changes
msg_commit="Imported abinit-fallbacks/${fbk_branch}/${fbk_revno}"
git add --force fallbacks
git status
echo ""
echo "Commit message: '${msg_commit}'"
echo ""
echo "******************************************************************************"
echo -n "Commit above changes (y/N)? "
read yesno
echo "******************************************************************************"
if test "${yesno}" = "Y" -o "${yesno}" = "y"; then
  git commit -m "${msg_commit}"
else
  exit 0
fi
